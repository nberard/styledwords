<?php

/**
 * This is the model base class for the table "record".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Record".
 *
 * Columns in table "record" available as properties of the model,
 * followed by relations of table "record" available as properties of the model.
 *
 * @property integer $id
 * @property string $record
 * @property integer $author_id
 * @property string $language
 * @property string $created_at
 *
 * @property Notation[] $notations
 * @property User $author
 */
abstract class BaseRecord extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'record';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Record|Records', $n);
	}

	public static function representingColumn() {
		return 'record';
	}

	public function rules() {
		return array(
			array('record, author_id, language, created_at', 'required'),
			array('author_id', 'numerical', 'integerOnly'=>true),
			array('record', 'length', 'max'=>1024),
			array('language', 'length', 'max'=>2),
			array('id, record, author_id, language, created_at', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'notations' => array(self::HAS_MANY, 'Notation', 'record_id'),
			'author' => array(self::BELONGS_TO, 'User', 'author_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'record' => Yii::t('app', 'Record'),
			'author_id' => null,
			'language' => Yii::t('app', 'Language'),
			'created_at' => Yii::t('app', 'Created At'),
			'notations' => null,
			'author' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('record', $this->record, true);
		$criteria->compare('author_id', $this->author_id);
		$criteria->compare('language', $this->language, true);
		$criteria->compare('created_at', $this->created_at, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}